// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: queries.sql

package sqlc

import (
	"context"
)

const findManyUsers = `-- name: FindManyUsers :many
SELECT id, created_at 
FROM ` + "`" + `users` + "`" + `
ORDER BY 
  ` + "`" + `created_at` + "`" + ` DESC, 
  ` + "`" + `id` + "`" + ` DESC
LIMIT ?
OFFSET ?
`

type FindManyUsersParams struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

func (q *Queries) FindManyUsers(ctx context.Context, arg *FindManyUsersParams) ([]*User, error) {
	rows, err := q.query(ctx, q.findManyUsersStmt, findManyUsers, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*User{}
	for rows.Next() {
		var i User
		if err := rows.Scan(&i.ID, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-flow-testnet
      name: block-poller-flow-testnet
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: block-poller-flow-testnet
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-receiver
      name: block-receiver
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: block-receiver
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      clusterIP: None
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: db
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      clusterIP: None
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: redis
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: rescheduling-consumer
      name: rescheduling-consumer
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: rescheduling-consumer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-consumer
      name: webhook-consumer
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: webhook-consumer
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-flow-testnet
      name: block-poller-flow-testnet
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: block-poller-flow-testnet
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: block-poller-flow-testnet
        spec:
          containers:
            - env:
                - name: BLOCK_POLLER_BATCH_SIZE
                  value: "10"
                - name: BLOCK_POLLER_BLOCKCHAIN_ID
                  value: flow-testnet
                - name: BLOCK_POLLER_BLOCKCHAIN_URL
                  value: access.devnet.nodes.onflow.org:9000
                - name: BLOCK_POLLER_DATABASE_URL
                  value: postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed
                - name: BLOCK_POLLER_MAX_IN_FLIGHT_REQUESTS
                  value: "10"
                - name: BLOCK_POLLER_NAME
                  value: flow-testnet-poller
                - name: BLOCK_POLLER_POLL_MS
                  value: "1000"
              image: block-poller-flow-testnet:1.0.0
              name: block-poller-flow-testnet
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-receiver
      name: block-receiver
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: block-receiver
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: block-receiver
        spec:
          containers:
            - env:
                - name: BLOCK_RECEIVER_BATCH_SIZE
                  value: "1000"
                - name: BLOCK_RECEIVER_DATABASE_URL
                  value: postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed
                - name: BLOCK_RECEIVER_MAX_WAIT_MS
                  value: "1000"
                - name: BLOCK_RECEIVER_REDIS_STREAM_URL
                  value: flow-testnet
              image: block-receiver:1.0.0
              name: block-receiver
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - args:
                - postgres
                - -c
                - log_statement=all
              env:
                - name: POSTGRES_DB
                  value: dev
                - name: POSTGRES_PASSWORD
                  value: password
                - name: POSTGRES_USER
                  value: rootuser
              image: db:1.0.0
              name: db
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: redis
        spec:
          containers:
            - args:
                - redis-server
                - --port
                - "6379"
                - --loglevel
                - debug
              image: docker.io/redis:7.2.1-alpine3.18
              name: redis
              ports:
                - containerPort: 6379
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: rescheduling-consumer
      name: rescheduling-consumer
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: rescheduling-consumer
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: rescheduling-consumer
        spec:
          containers:
            - env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: RESCHEDULING_CONSUMER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: RESCHEDULING_CONSUMER_DATABASE_URL
                  value: postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed
                - name: RESCHEDULING_CONSUMER_MAX_POOL_SIZE
                  value: "3"
                - name: RESCHEDULING_CONSUMER_NAME
                  value: $(POD_NAMESPACE)-$(POD_NAME)
                - name: RESCHEDULING_CONSUMER_REDIS_STREAM_URL
                  value: redis:6379
              image: rescheduling-consumer:1.0.0
              name: rescheduling-consumer
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-consumer
      name: webhook-consumer
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: webhook-consumer
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: webhook-consumer
        spec:
          containers:
            - env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WEBHOOK_CONSUMER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: WEBHOOK_CONSUMER_DATABASE_URL
                  value: postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed
                - name: WEBHOOK_CONSUMER_MAX_POOL_SIZE
                  value: "3"
                - name: WEBHOOK_CONSUMER_MAX_RESCHEDULING_RETRIES
                  value: "3"
                - name: WEBHOOK_CONSUMER_NAME
                  value: $(POD_NAMESPACE)-$(POD_NAME)
                - name: WEBHOOK_CONSUMER_REDIS_STREAM_URL
                  value: redis:6379
              image: webhook-consumer:1.0.0
              name: webhook-consumer
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

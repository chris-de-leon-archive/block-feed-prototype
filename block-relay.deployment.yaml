apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-flusher
      name: block-flusher
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: block-flusher
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-flow-testnet
      name: block-poller-flow-testnet
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: block-poller-flow-testnet
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-redis
      name: block-poller-redis
    spec:
      clusterIP: None
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: block-poller-redis
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: caching-consumer
      name: caching-consumer
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: caching-consumer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      clusterIP: None
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        io.kompose.service: mongodb
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      clusterIP: None
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysql
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-consumer
      name: webhook-consumer
    spec:
      clusterIP: None
      ports:
        - name: headless
          port: 55555
          targetPort: 0
      selector:
        io.kompose.service: webhook-consumer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-redis
      name: webhook-redis
    spec:
      clusterIP: None
      ports:
        - name: "6380"
          port: 6380
          targetPort: 6380
      selector:
        io.kompose.service: webhook-redis
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-flusher
      name: block-flusher
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: block-flusher
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: block-flusher
        spec:
          containers:
            - env:
                - name: BLOCK_FLUSHER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: BLOCK_FLUSHER_REDIS_BLOCK_STREAM_URL
                  value: block-poller-redis:6379
                - name: BLOCK_FLUSHER_REDIS_WEBHOOK_STREAM_URL
                  value: webhook-redis:6380
              image: block-flusher:1.0.0
              name: block-flusher
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-flow-testnet
      name: block-poller-flow-testnet
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: block-poller-flow-testnet
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: block-poller-flow-testnet
        spec:
          containers:
            - env:
                - name: BLOCK_POLLER_BATCH_SIZE
                  value: "10"
                - name: BLOCK_POLLER_BLOCKCHAIN_ID
                  value: flow-testnet
                - name: BLOCK_POLLER_BLOCKCHAIN_URL
                  value: access.devnet.nodes.onflow.org:9000
                - name: BLOCK_POLLER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: BLOCK_POLLER_MAX_IN_FLIGHT_REQUESTS
                  value: "10"
                - name: BLOCK_POLLER_MYSQL_URL
                  value: block_relay_role:password@tcp(mysql:3306)/dev?parseTime=true
                - name: BLOCK_POLLER_POLL_MS
                  value: "1000"
                - name: BLOCK_POLLER_REDIS_URL
                  value: block-poller-redis:6379
              image: block-poller-flow-testnet:1.0.0
              name: block-poller-flow-testnet
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: block-poller-redis
      name: block-poller-redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: block-poller-redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: block-poller-redis
        spec:
          containers:
            - args:
                - --port
                - "6379"
                - --loglevel
                - debug
              image: docker.io/redis:7.2.1-alpine3.18
              name: block-poller-redis
              ports:
                - containerPort: 6379
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: caching-consumer
      name: caching-consumer
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: caching-consumer
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: caching-consumer
        spec:
          containers:
            - env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: CACHING_CONSUMER_BLOCKCHAIN_ID
                  value: flow-testnet
                - name: CACHING_CONSUMER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: CACHING_CONSUMER_MONGO_DATABASE_NAME
                  value: block-feed
                - name: CACHING_CONSUMER_MONGO_URL
                  value: mongodb://readwrite:password@mongodb:27017/?compressors=zlib&replicaSet=rs0
                - name: CACHING_CONSUMER_NAME
                  value: $(POD_NAMESPACE)-$(POD_NAME)
                - name: CACHING_CONSUMER_REDIS_URL
                  value: block-poller-redis:6379
              image: caching-consumer:1.0.0
              name: caching-consumer
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongodb
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: mongodb
        spec:
          containers:
            - env:
                - name: MONGO_AUTO_INIT
                  value: "true"
                - name: MONGO_DB
                  value: block-feed
              image: mongo-dev:1.0.0
              name: mongodb
              ports:
                - containerPort: 27017
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: mysql
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: dev
                - name: MYSQL_PASSWORD
                  value: password
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                - name: MYSQL_USER
                  value: rootuser
              image: mysql-dev:1.0.0
              name: mysql
              ports:
                - containerPort: 3306
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-consumer
      name: webhook-consumer
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: webhook-consumer
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: webhook-consumer
        spec:
          containers:
            - env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WEBHOOK_CONSUMER_BLOCK_TIMEOUT_MS
                  value: "60000"
                - name: WEBHOOK_CONSUMER_MONGO_DATABASE_NAME
                  value: block-feed
                - name: WEBHOOK_CONSUMER_MONGO_URL
                  value: mongodb://readonly:password@mongodb:27017/?compressors=zlib&replicaSet=rs0
                - name: WEBHOOK_CONSUMER_MYSQL_CONN_POOL_SIZE
                  value: "10"
                - name: WEBHOOK_CONSUMER_MYSQL_URL
                  value: block_relay_role:password@tcp(mysql:3306)/dev?parseTime=true
                - name: WEBHOOK_CONSUMER_NAME
                  value: $(POD_NAMESPACE)-$(POD_NAME)
                - name: WEBHOOK_CONSUMER_POOL_SIZE
                  value: "5"
                - name: WEBHOOK_CONSUMER_REDIS_URL
                  value: webhook-redis:6380
              image: webhook-consumer:1.0.0
              name: webhook-consumer
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
        kompose.service.type: headless
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webhook-redis
      name: webhook-redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: webhook-redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f block-relay.compose.yml --out block-relay.deployment.yaml
            kompose.service.type: headless
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: webhook-redis
        spec:
          containers:
            - args:
                - --port
                - "6380"
                - --loglevel
                - debug
              image: docker.io/redis:7.2.1-alpine3.18
              name: webhook-redis
              ports:
                - containerPort: 6380
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

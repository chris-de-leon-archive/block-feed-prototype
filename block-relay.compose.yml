version: "3"

services:
  block-poller-flow-testnet:
    image: block-poller-flow-testnet:${TAG}
    restart: always
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/block-poller/flow/main.go"
    environment:
      BLOCK_POLLER_MYSQL_URL: "block_relay_role:password@tcp(mysql:3306)/dev?parseTime=true"
      BLOCK_POLLER_REDIS_URL: "block-poller-redis:6379"
      BLOCK_POLLER_BLOCKCHAIN_URL: "access.devnet.nodes.onflow.org:9000"
      BLOCK_POLLER_BLOCKCHAIN_ID: "flow-testnet"
      BLOCK_POLLER_MAX_IN_FLIGHT_REQUESTS: "10"
      BLOCK_POLLER_BLOCK_TIMEOUT_MS: "60000"
      BLOCK_POLLER_BATCH_SIZE: "10"
      BLOCK_POLLER_POLL_MS: "1000"
    depends_on:
      - block-poller-redis
      - mysql

  block-flusher:
    image: block-flusher:${TAG}
    restart: always
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/block-flusher/main.go"
    environment:
      BLOCK_FLUSHER_REDIS_WEBHOOK_STREAM_URL: "webhook-redis:6380"
      BLOCK_FLUSHER_REDIS_BLOCK_STREAM_URL: "block-poller-redis:6379"
      BLOCK_FLUSHER_BLOCK_TIMEOUT_MS: "60000"
    depends_on:
      - block-poller-redis
      - webhook-redis

  webhook-consumer:
    image: webhook-consumer:${TAG}
    restart: always
    labels:
      - kompose.service.type=headless
    deploy:
      mode: "replicated"
      replicas: 2
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/webhook-consumer/main.go"
    environment:
      WEBHOOK_CONSUMER_MONGO_URL: "mongodb://readonly:password@mongodb:27017/?compressors=zlib&replicaSet=rs0"
      WEBHOOK_CONSUMER_MONGO_DATABASE_NAME: "block-feed"
      WEBHOOK_CONSUMER_MYSQL_URL: "block_relay_role:password@tcp(mysql:3306)/dev?parseTime=true"
      WEBHOOK_CONSUMER_REDIS_URL: "webhook-redis:6380"
      WEBHOOK_CONSUMER_MYSQL_CONN_POOL_SIZE: "10"
      WEBHOOK_CONSUMER_POOL_SIZE: "5"
      WEBHOOK_CONSUMER_BLOCK_TIMEOUT_MS: "60000"
      #
      # NOTE: these env variables should be added to the deployment file generated
      # by kompose so that each consumer replica gets a unique name for Rabbit MQ.
      #
      # Source: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#using-environment-variables-inside-of-your-config
      #
      # - env:
      #   - name: POD_NAMESPACE
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.namespace
      #   - name: POD_NAME
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.name
      #
      WEBHOOK_CONSUMER_NAME: "$$(POD_NAMESPACE)-$$(POD_NAME)"
    depends_on:
      - webhook-redis
      - mongodb
      - mysql

  caching-consumer:
    image: caching-consumer:${TAG}
    restart: always
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/caching-consumer/main.go"
    environment:
      CACHING_CONSUMER_MONGO_URL: "mongodb://readwrite:password@mongodb:27017/?compressors=zlib&replicaSet=rs0"
      CACHING_CONSUMER_MONGO_DATABASE_NAME: "block-feed"
      CACHING_CONSUMER_REDIS_URL: "block-poller-redis:6379"
      CACHING_CONSUMER_BLOCKCHAIN_ID: "flow-testnet"
      CACHING_CONSUMER_BLOCK_TIMEOUT_MS: "60000"
      #
      # NOTE: these env variables should be added to the deployment file generated
      # by kompose so that each consumer replica gets a unique name for Rabbit MQ.
      #
      # Source: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#using-environment-variables-inside-of-your-config
      #
      # - env:
      #   - name: POD_NAMESPACE
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.namespace
      #   - name: POD_NAME
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.name
      #
      CACHING_CONSUMER_NAME: "$$(POD_NAMESPACE)-$$(POD_NAME)"
    depends_on:
      - block-poller-redis
      - mongodb
      - mysql

  block-poller-redis:
    container_name: "block-poller-redis"
    image: docker.io/redis:7.2.1-alpine3.18
    labels:
      - kompose.service.type=headless
    command: ["--port", "6379", "--loglevel", "debug"]
    ports:
      - "6379:6379"

  webhook-redis:
    container_name: "webhook-redis"
    image: docker.io/redis:7.2.1-alpine3.18
    labels:
      - kompose.service.type=headless
    command: ["--port", "6380", "--loglevel", "debug"]
    ports:
      - "6380:6380"

  mongodb:
    container_name: "mongodb"
    image: mongo-dev:${TAG}
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./vendor/mongodb
      args:
        MONGO_VERSION: "7.0.5"
    environment:
      MONGO_AUTO_INIT: "true"
      MONGO_DB: "block-feed"
    ports:
      - "27017:27017"

  mysql:
    container_name: "mysql"
    image: mysql-dev:${TAG}
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./vendor/mysql
      args:
        MYSQL_VERSION: "8.3.0"
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "dev"
      MYSQL_PASSWORD: "password"
      MYSQL_USER: "rootuser"
    ports:
      - "3306:3306"

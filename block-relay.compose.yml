version: "3"

services:
  block-poller-flow-testnet:
    image: block-poller-flow-testnet:${TAG}
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/block-poller/flow/main.go"
    environment:
      BLOCK_POLLER_DATABASE_URL: "postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed"
      BLOCK_POLLER_BLOCKCHAIN_URL: "access.devnet.nodes.onflow.org:9000"
      BLOCK_POLLER_BLOCKCHAIN_ID: "flow-testnet"
      BLOCK_POLLER_NAME: "flow-testnet-poller"
      BLOCK_POLLER_MAX_IN_FLIGHT_REQUESTS: "10"
      BLOCK_POLLER_BATCH_SIZE: "10"
      BLOCK_POLLER_POLL_MS: "1000"

  block-receiver:
    image: block-receiver:${TAG}
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/block-receiver/main.go"
    environment:
      BLOCK_RECEIVER_DATABASE_URL: "postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed"
      BLOCK_RECEIVER_REDIS_STREAM_URL: "flow-testnet"
      BLOCK_RECEIVER_BATCH_SIZE: "1000"
      BLOCK_RECEIVER_MAX_WAIT_MS: "1000"

  webhook-consumer:
    image: webhook-consumer:${TAG}
    labels:
      - kompose.service.type=headless
    deploy:
      mode: "replicated"
      replicas: 2
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/webhook-consumer/main.go"
    environment:
      WEBHOOK_CONSUMER_DATABASE_URL: "postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed"
      WEBHOOK_CONSUMER_REDIS_STREAM_URL: "redis:6379"
      WEBHOOK_CONSUMER_MAX_POOL_SIZE: 3
      WEBHOOK_CONSUMER_BLOCK_TIMEOUT_MS: 60000
      WEBHOOK_CONSUMER_MAX_RESCHEDULING_RETRIES: 3
      #
      # NOTE: these env variables should be added to the deployment file generated
      # by kompose so that each consumer replica gets a unique name for Rabbit MQ.
      #
      # Source: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#using-environment-variables-inside-of-your-config
      #
      # - env:
      #   - name: POD_NAMESPACE
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.namespace
      #   - name: POD_NAME
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.name
      #
      WEBHOOK_CONSUMER_NAME: "$$(POD_NAMESPACE)-$$(POD_NAME)"

  rescheduling-consumer:
    image: rescheduling-consumer:${TAG}
    labels:
      - kompose.service.type=headless
    deploy:
      mode: "replicated"
      replicas: 2
    build:
      dockerfile: ./Dockerfile
      context: ./block-relay
      args:
        BUILD_PATH: "./src/apps/rescheduling-consumer/main.go"
    environment:
      RESCHEDULING_CONSUMER_DATABASE_URL: "postgres://rootuser:password@db:5432/dev?sslmode=disable&search_path=block_feed"
      RESCHEDULING_CONSUMER_REDIS_STREAM_URL: "redis:6379"
      RESCHEDULING_CONSUMER_MAX_POOL_SIZE: 3
      RESCHEDULING_CONSUMER_BLOCK_TIMEOUT_MS: 60000
      #
      # NOTE: these env variables should be added to the deployment file generated
      # by kompose so that each consumer replica gets a unique name for Rabbit MQ.
      #
      # Source: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#using-environment-variables-inside-of-your-config
      #
      # - env:
      #   - name: POD_NAMESPACE
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.namespace
      #   - name: POD_NAME
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.name
      #
      RESCHEDULING_CONSUMER_NAME: "$$(POD_NAMESPACE)-$$(POD_NAME)"

  redis:
    image: docker.io/redis:7.2.1-alpine3.18
    labels:
      - kompose.service.type=headless
    command: ["redis-server", "--port", "6379", "--loglevel", "debug"]
    ports:
      - "6379:6379"

  db:
    image: db:${TAG}
    labels:
      - kompose.service.type=headless
    build:
      dockerfile: ./Dockerfile
      context: ./db
      args:
        POSTGRES_VERSION: "16.1-alpine3.18"
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "rootuser"
      POSTGRES_DB: "dev"
    ports:
      - "5432:5432"
